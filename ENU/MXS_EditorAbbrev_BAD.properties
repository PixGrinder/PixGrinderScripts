/*//////////   SCRIPT:   sgzAbbreviation   //////////*/
/*//////////   CREATED BY:   Clément Plantec (based on the one from Branko "Barigazy" Zivkovic   //////////*/
/*//////////   EMAIL:   plantec.clement@gmail.com   //////////*/



/* COMMENTS */
/*=/*\n\n*/
intro=/*##############################################################################\nSCRIPT NAME\nVersion 0.01\nScript By Clément "Sugz" Plantec\nplantec.clement@gmail.com\n\n# Required Components:\n\n# Script infos:\n\n# Sources:\n\n# To do list:\n\n# History:\n\n*Use / Modify this script at your own risk !*\n###############################################################################*/\n\n\n
sharp=/* | ############################################################################################*/
star=/* | ***************************************************************************************************************************************************************/


/* VALUES */
arr=arr = #()
varr =valArr = #(100, 200, 300, 400, 500)
sarr =strArr = #("STR", "STR", "STR", "STR", "STR")
oarr=objArr = #(VAR, VAR, VAR, VAR, VAR)
marr=multyArr = #(#(VAR, VAR), #(VAR, VAR), #(VAR, VAR))
p2=[100,200] 
p3=[100,200,300]
str=""
asa=as array
ass=as string
asn=as name
asi=as integer
asf=as float
cp=convertToPoly obj
cm=convertToMesh obj
cs=convertToSplineShape spl
sam=snapshotAsMesh obj


/* CODE STRUCTURES */
stc=struct |Stc\n(\n\t\n\t\n)\n
prop=prop|,\n\nfn Set =\n(\n\n)\n\nfn Get =\n(\n\n)\n
fn=fn | =\n(\n\t/*<Function>\n\tArguments:\n\tReturn:\n\tFurther Infos:\n\t</Function>*/\n\t\n\t\n\n)\n
mfn=mapped fn FNNAME VAR1 VAR2: =\n(\n\tCODE\n)
ifte=if ARG then\n(\n\tSTATE1\n)\nelse\n(\n\tSTATE2\n)
ifd=if ARG do\n(\n\tSTATE\n)
cof=case of (\n\t(ARG1a==ARG1b): (CODE)\n\t(ARG2a==ARG2b): (CODE)\n\t(ARG3a==ARG3b): (CODE)\n\tdefault: (CODE)\n)
cvof=case ARG of (\n\t(ARG1): (CODE)\n\t(ARG2): (CODE)\n\t(ARG3): (CODE)\n\tdefault: (CODE)\n)
foro=for o in WHAT do\n(\n\t\n)\n
foroc=VAR = for o in WHAT collect\n(\n\t\n)\n
forow=for o in WHAT where ARG1 == ARG2 do\n(\n\t\n)\n
forowc=VAR = for o in WHAT where ARG1 == ARG2 collect\n(\n\t\n)\n
fori=for i = 1 to count do\n(\n\t\n)\n
foric=VAR = for i = 1 to count collect\n(\n\t\n)\n
foriw=for i = 1 to count where ARG1 == ARG2 do\n(\n\t\n)\n
foriwc=VAR = for i = 1 to count where ARG1 == ARG2 collect\n(\n\t\n)\n
foribw=for i = 1 to count by NM where ARG1 == ARG2 do\n(\n\t\n)\n
foribwc=VAR = for i = 1 to count by NM where ARG1 == ARG2 collect\n(\n\t\n)\n
forc = for i = count to 1 by -1 go\n(\n\t\n)\n
forcc = for i = count to 1 by -1 collect\n(\n\t\n)\n
forcw = for i = count to 1 by -1 where ARG1 == ARG2 do\n(\n\t\n)\n
forcwc = for i = count to 1 by -1 where ARG1 == ARG2 collect\n(\n\t\n)\n


/* FUNCTION ARGUMENTS */
<o=<Optional> 
<d=<Default: |> 
<v=<Var> 
<b=<Bool> 
<i=<Integer> 
<f=<Float> 
<s=<String> 
<n=<Name> 
<a=<Array <|> 
<p2=<Point2> 
<p3=<Point3> 
<obj=<Object> 
<no=<Node> 
<xmle=<xml Element> 



/* CUSTOM ATTRIBUTES */
attr=def = attributes theDef "NAME(OPTIONAL)"\n(\n\tparameters main rollout:params\n\t(\n\t\tpar\n\t)\n\trollout params "NAME"\n\t(\n\t\tspn\n\t)\n\t\n)\ncustAttributes.add $ def
par= name type:# ui: default:
parf=name type:#float ui: default:


/*MXS_CONTROLS*/
roll=try(destroyDialog testRoll) catch()\nRollout testRoll "Sugz"\n(\n\t\n\t\n)\ncreateDialog testRoll 188 300 style:#(#style_titlebar, #style_sysmenu, #style_toolwindow)
btn=button |Btn "" width: height: offset:[0,0]
pbn=pickButton |Pbn "" width: height: offset:[0,0]
spn=spinner |Spn "" width: fieldWidth: range:[,,] type:# offset:[0,0]
chb=checkButton |Chb "" width: height: offset:[0,0]
chk=checkBox |Chk "" width:15 align:#right offset:[0,0]
ddl=dropDownList |Ddl "" width: height: offset:[0,0]
grp=group "|"\n(\n\t\n)
clr=colorpicker |Clr "" color: alpha: fieldWidth: height: modal: title: offset:[0,0]
lbl=label |Lbl "" offset:[0,0]

/* EVENT HANDLERS */
onb=on | pressed do\n(\n\t\n)
onbrc=on | rightclick do\n(\n\t\n)
ons=on | changed val do\n(\n\t\n)
onc=on | changed arg do\n(\n\t\n)
onp=on | picked obj do\n(\n\t\n)

/* DEBUG */
format=format "|\\n"